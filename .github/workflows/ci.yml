name: 🧪 Continuous Integration

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: '18'

jobs:
  lint:
    name: 🔍 Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - name: 📂 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📥 Install dependencies
        run: npm ci
        
      - name: 🔍 ESLint
        run: npm run lint
        
      - name: 💅 Prettier check
        run: npm run format:check

  test:
    name: 🧪 Unit Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16, 18, 20]
    
    steps:
      - name: 📂 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: 📥 Install dependencies
        run: npm ci
        
      - name: 🧪 Run tests
        run: npm test -- --coverage --watchAll=false
        
      - name: 📊 Upload coverage
        if: matrix.node-version == 18
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info

  build:
    name: 🏗️ Build Check
    runs-on: ubuntu-latest
    
    steps:
      - name: 📂 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📥 Install dependencies
        run: npm ci
        
      - name: 🏗️ Build application
        run: npm run build
        env:
          CI: false
          
      - name: 📏 Check bundle size
        run: |
          npm install -g bundlesize
          bundlesize

  security:
    name: 🔒 Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: 📂 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📥 Install dependencies
        run: npm ci
        
      - name: 🔒 Audit dependencies
        run: npm audit --audit-level=moderate
        
      - name: 🕵️ Check for secrets
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD

  accessibility:
    name: ♿ Accessibility Check
    runs-on: ubuntu-latest
    
    steps:
      - name: 📂 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📥 Install dependencies
        run: npm ci
        
      - name: 🏗️ Build application
        run: npm run build
        
      - name: ♿ Run Pa11y
        run: |
          npm install -g pa11y-ci
          npx serve -s build -p 3000 &
          sleep 5
          pa11y-ci http://localhost:3000

  performance:
    name: ⚡ Performance Check
    runs-on: ubuntu-latest
    
    steps:
      - name: 📂 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📥 Install dependencies
        run: npm ci
        
      - name: 🏗️ Build application
        run: npm run build
        
      - name: ⚡ Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          configPath: './lighthouserc.js'
          uploadArtifacts: true
          temporaryPublicStorage: true

  dependency-review:
    name: 📦 Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: 📂 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate

  notify:
    name: 📢 Notify Results
    runs-on: ubuntu-latest
    needs: [lint, test, build, security]
    if: always()
    
    steps:
      - name: ✅ All checks passed
        if: needs.lint.result == 'success' && needs.test.result == 'success' && needs.build.result == 'success' && needs.security.result == 'success'
        run: echo "🎉 All CI checks passed!"
        
      - name: ❌ Some checks failed
        if: contains(needs.*.result, 'failure')
        run: |
          echo "❌ Some CI checks failed:"
          echo "Lint: ${{ needs.lint.result }}"
          echo "Test: ${{ needs.test.result }}"
          echo "Build: ${{ needs.build.result }}"
          echo "Security: ${{ needs.security.result }}"
          exit 1